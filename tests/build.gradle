apply plugin: 'com.android.library'
apply plugin: 'robolectric'
apply plugin: 'jacoco'

android {
    compileSdkVersion 20
    buildToolsVersion '21.1'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 18
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            testCoverageEnabled = false
        }
    }
    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
    }
}

dependencies {
    compile project(':android-sdk')

    androidTestCompile'junit:junit:4.11'
    androidTestCompile 'com.squareup:fest-android:1.0.8'
    androidTestCompile 'org.mockito:mockito-all:1.9.5'
    androidTestCompile('org.robolectric:robolectric:2.3') {
        exclude group: 'commons-logging'
        exclude group: 'org.apache.httpcomponents'
    }

    androidTestCompile project(':android-sdk').android.libraryVariants.toList().first().javaCompile.classpath
    androidTestCompile project(':android-sdk').android.libraryVariants.toList().first().javaCompile.outputs.files
    androidTestCompile files(project(':android-sdk').plugins.findPlugin("com.android.library").getBootClasspath())
}

robolectric {
    // configure the set of classes for JUnit tests
    include '**/*Test.class'

    // configure max heap size of the test JVM
    maxHeapSize = "2048m"
}

jacoco {
    toolVersion = "0.7.1.201405082137"
}

task robolectricReports(type: JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: '../android-sdk/build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/*$*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    def coverageSourceDirs = ['../android-sdk/src/main/java']
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../tests/build/jacoco/testDebug.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }

}